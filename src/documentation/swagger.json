{
  "openapi": "3.0.0",
  "info": {
    "title": "Chop API",
    "version": "1.0.0",
    "description": "API for African & Carribean Cuisine",
    "contact": {
      "name": "Byvalvin",
      "url": "https://byvalvin.github.io"
    },
    "license": {
      "name": "Licensed Under MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    }
  },
  "servers": [
    {
      "url": "https://chop-api-nine.vercel.app",
      "description": "API Server"
    }
  ],
  "paths": {
    "/chop/api/categories": {
      "get": {
        "summary": "Fetch all available categories.",
        "description": "Fetch a list of all available categories with the option to filter and paginate the results.\nThe response can be sorted and filtered by search term. If no categories are found, an empty list will be returned.\n",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort categories by.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for paginated results.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term to filter categories by name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "dessert"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available categories, possibly filtered and paginated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "The total number of categories available."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the category."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the category."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters (e.g., invalid limit, page, or sort).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/chop/api/ingredients": {
      "get": {
        "summary": "Fetch all available ingredients.",
        "description": "Fetch a list of all available ingredients, with optional filtering and pagination. You can filter ingredients by various parameters, such as search term, and sort them by specific fields.\n",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Specify the field to sort by (e.g., \"name\"). Defaults to sorting by name.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "category",
                "cost"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of ingredients to fetch per page. Defaults to 10, max is 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of results to retrieve. Defaults to 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for ingredients by keyword (e.g., name or category).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of ingredients with detailed information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "Total number of ingredients that match the filters."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the ingredient."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient."
                          },
                          "category": {
                            "type": "string",
                            "description": "The category the ingredient belongs to."
                          },
                          "cost": {
                            "type": "integer",
                            "description": "The cost of the ingredient."
                          },
                          "description": {
                            "type": "string",
                            "description": "A short description of the ingredient."
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "URL to the image."
                                },
                                "caption": {
                                  "type": "string",
                                  "description": "A short caption for the image."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching ingredients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingredients"
        ]
      }
    },
    "/chop/api/ingredients/{ingredient_id}/recipes": {
      "get": {
        "summary": "Fetch all available recipes that require a specific ingredient by ID.",
        "description": "Fetch a list of recipes that include the specified ingredient. You can filter the results by various criteria, including category, subcategory, nation, region, time, cost, and more.\n",
        "parameters": [
          {
            "name": "ingredient_id",
            "in": "path",
            "description": "The unique identifier for the ingredient.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter recipes by category.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_category",
            "in": "query",
            "description": "Filter recipes by subcategory.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nation",
            "in": "query",
            "description": "Filter recipes by nation.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter recipes by region.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Filter recipes by cooking time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "Filter recipes by cost.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify the field to sort by (e.g., \"name\", \"time\"). Defaults to sorting by recipe name.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "time",
                "cost"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of recipes to fetch per page. Defaults to 10, max is 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of results to retrieve. Defaults to 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for recipes that include the ingredient, by name or description.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Filter recipes by the amount of the ingredient used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Filter recipes by the unit of the ingredient (e.g., grams, cups).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recipes that use the specified ingredient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "The total number of recipes found."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the recipe."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the recipe."
                          },
                          "description": {
                            "type": "string",
                            "description": "A brief description of the recipe."
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "string"
                                },
                                "unit": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "time": {
                            "type": "string",
                            "description": "The time required to prepare the recipe."
                          },
                          "cost": {
                            "type": "string",
                            "description": "The estimated cost of the recipe."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No recipes found that include the specified ingredient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingredients"
        ]
      }
    },
    "/chop/api/ingredients/{ingredient_name}/recipes": {
      "get": {
        "summary": "Fetch all available recipes that require a specific ingredient by name.",
        "description": "Fetch a list of recipes that include the specified ingredient. You can filter the results by various criteria, including category, subcategory, nation, region, time, cost, and more.\n",
        "parameters": [
          {
            "name": "ingredient_name",
            "in": "path",
            "description": "The name of the ingredient (case-insensitive).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter recipes by category.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sub_category",
            "in": "query",
            "description": "Filter recipes by subcategory.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nation",
            "in": "query",
            "description": "Filter recipes by nation.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter recipes by region.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Filter recipes by cooking time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "Filter recipes by cost.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify the field to sort by (e.g., \"name\", \"time\"). Defaults to sorting by recipe name.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "time",
                "cost"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of recipes to fetch per page. Defaults to 10, max is 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of results to retrieve. Defaults to 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for recipes that include the ingredient, by name or description.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Filter recipes by the amount of the ingredient used.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "description": "Filter recipes by the unit of the ingredient (e.g., grams, cups).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recipes that use the specified ingredient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "The total number of recipes found."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the recipe."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the recipe."
                          },
                          "description": {
                            "type": "string",
                            "description": "A brief description of the recipe."
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "string"
                                },
                                "unit": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "time": {
                            "type": "string",
                            "description": "The time required to prepare the recipe."
                          },
                          "cost": {
                            "type": "string",
                            "description": "The estimated cost of the recipe."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No recipes found that include the specified ingredient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingredients"
        ]
      }
    },
    "/chop/api/nations": {
      "get": {
        "summary": "Fetch all available nations.",
        "description": "Fetch a list of all available nations with the option to filter, sort, and paginate the results.\nIf no nations are found, an empty list will be returned.\n",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort nations by (default is by name).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for paginated results.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term to filter nations by name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Germany"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available nations, possibly filtered, sorted, and paginated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "The total number of nations available."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the nation."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the nation."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters (e.g., invalid limit, page, or sort).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching nations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Nations"
        ]
      }
    },
    "/chop/api/recipes": {
      "get": {
        "summary": "Fetch all available recipes.",
        "description": "Fetch a list of all available recipes. You can filter recipes by various parameters such as category, subcategory, nation, region, time, cost, and more.\n",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter recipes by category.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subcategory",
            "in": "query",
            "description": "Filter recipes by subcategory.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nation",
            "in": "query",
            "description": "Filter recipes by nation.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter recipes by region.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Filter recipes by preparation time.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "Filter recipes by cost.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify the field to sort by (e.g., name).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "time",
                "cost"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of recipes to fetch per page. Defaults to 10, max is 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of results to retrieve. Defaults to 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for recipes by keyword.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of recipes with detailed information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "Total number of recipes that match the filters."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the recipe."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the recipe."
                          },
                          "description": {
                            "type": "string",
                            "description": "A short description of the recipe."
                          },
                          "nation": {
                            "type": "string",
                            "description": "The nation the recipe is associated with."
                          },
                          "region": {
                            "type": "string",
                            "description": "The region the recipe is associated with."
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of categories for the recipe (e.g., \"Main\", \"Vegetarian\")."
                          },
                          "subcategories": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of subcategories for the recipe (e.g., \"Quick\", \"Vegetarian\")."
                          },
                          "aliases": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of alternative names for the recipe."
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "The URL to the image."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of image (e.g., \"thumbnail\", \"full-size\")."
                                },
                                "caption": {
                                  "type": "string",
                                  "description": "A short caption describing the image."
                                }
                              }
                            }
                          },
                          "time": {
                            "type": "integer",
                            "description": "Preparation time in minutes."
                          },
                          "cost": {
                            "type": "integer",
                            "description": "The cost of the recipe."
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the ingredient."
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "The quantity of the ingredient."
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "The unit of measurement (e.g., \"grams\", \"pieces\")."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "post": {
        "summary": "Add a new recipe.",
        "description": "Add a new recipe to the system. You must provide the required fields in the request body, such as name, description, nation, region, ingredients, and instructions. Optionally, you can also provide aliases, categories, subcategories, images, cost, and preparation time.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "nation",
                  "region",
                  "ingredients",
                  "instructions",
                  "time"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the recipe."
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the recipe."
                  },
                  "nation": {
                    "type": "string",
                    "description": "The nation the recipe is associated with."
                  },
                  "region": {
                    "type": "string",
                    "description": "The region the recipe is associated with."
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the ingredient."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The quantity of the ingredient."
                        },
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement (e.g., grams, pieces)."
                        }
                      }
                    }
                  },
                  "instructions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Step-by-step instructions to prepare the recipe."
                    }
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of alternative names for the recipe."
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of categories the recipe belongs to (e.g., \"Main\", \"Vegetarian\")."
                  },
                  "subcategories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of subcategories for the recipe (e.g., \"Quick\", \"Vegetarian\")."
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL to the image."
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of image (e.g., \"thumbnail\", \"full-size\")."
                        },
                        "caption": {
                          "type": "string",
                          "description": "A short caption describing the image."
                        }
                      }
                    }
                  },
                  "time": {
                    "type": "integer",
                    "description": "Preparation time in minutes."
                  },
                  "cost": {
                    "type": "integer",
                    "description": "The cost of the recipe in your currency. Defaults to 0 if not provided."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe successfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A success message indicating the new recipe has been added."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message explaining what went wrong."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while adding the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "The technical error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}": {
      "get": {
        "summary": "Fetch recipe by ID.",
        "description": "Retrieve the details of a specific recipe by its ID. The ID must be numeric and provided as part of the URL path.\nIf the recipe with the given ID does not exist, a 404 error is returned.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the recipe.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The recipe details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the recipe."
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the recipe."
                    },
                    "nation": {
                      "type": "string",
                      "description": "The nation the recipe is associated with."
                    },
                    "region": {
                      "type": "string",
                      "description": "The region the recipe is associated with."
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient."
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the ingredient."
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the ingredient (e.g., grams, pieces)."
                          }
                        }
                      }
                    },
                    "instructions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Step-by-step instructions to prepare the recipe."
                      }
                    },
                    "time": {
                      "type": "integer",
                      "description": "The preparation time in minutes."
                    },
                    "cost": {
                      "type": "integer",
                      "description": "The cost of the recipe in your currency."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message explaining the invalid ID."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the recipe was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipe details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "The technical error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "put": {
        "summary": "Replace an existing recipe by its ID.",
        "description": "Replace the existing recipe with the provided ID. The request body should contain the updated recipe data.\nIf the recipe with the given ID does not exist, a 404 error is returned.\nAll existing associations (ingredients, categories, subcategories, instructions, aliases, and images) are replaced with the new data.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the recipe to replace.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the recipe."
                  },
                  "description": {
                    "type": "string",
                    "description": "A detailed description of the recipe."
                  },
                  "nation": {
                    "type": "string",
                    "description": "The nation the recipe originates from."
                  },
                  "region": {
                    "type": "string",
                    "description": "The region the recipe is associated with."
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the ingredient."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The quantity of the ingredient."
                        },
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement for the ingredient (e.g., grams, pieces)."
                        }
                      }
                    }
                  },
                  "instructions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A step-by-step list of instructions to prepare the recipe."
                    }
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Any alternative names or aliases for the recipe."
                    }
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Categories the recipe belongs to."
                    }
                  },
                  "subcategories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Subcategories the recipe belongs to."
                    }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "URL of the image."
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the image (e.g., thumbnail, full-size)."
                        },
                        "caption": {
                          "type": "string",
                          "description": "A caption for the image."
                        }
                      }
                    }
                  },
                  "time": {
                    "type": "integer",
                    "description": "The preparation time in minutes."
                  },
                  "cost": {
                    "type": "integer",
                    "description": "The cost of the recipe."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated recipe data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the recipe."
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the recipe."
                    },
                    "nation": {
                      "type": "string",
                      "description": "The nation the recipe is associated with."
                    },
                    "region": {
                      "type": "string",
                      "description": "The region the recipe is associated with."
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient."
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the ingredient."
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the ingredient (e.g., grams, pieces)."
                          }
                        }
                      }
                    },
                    "instructions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Step-by-step instructions to prepare the recipe."
                      }
                    },
                    "time": {
                      "type": "integer",
                      "description": "The preparation time in minutes."
                    },
                    "cost": {
                      "type": "integer",
                      "description": "The cost of the recipe in your currency."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message explaining what went wrong."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the given ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while replacing the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "The technical error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "patch": {
        "summary": "Edit an existing recipe by its ID.",
        "description": "This endpoint allows you to edit an existing recipe by its unique ID. The request body can contain any subset of recipe fields. \nFields that are not provided will not be updated, and the original values will remain unchanged. \nThis is a partial update compared to a full replacement (PUT).\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the recipe to update.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the recipe (optional)."
                  },
                  "description": {
                    "type": "string",
                    "description": "A detailed description of the recipe (optional)."
                  },
                  "nation": {
                    "type": "string",
                    "description": "The nation the recipe originates from (optional)."
                  },
                  "region": {
                    "type": "string",
                    "description": "The region the recipe is associated with (optional)."
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the ingredient (optional)."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The quantity of the ingredient (optional)."
                        },
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement for the ingredient (optional)."
                        }
                      }
                    }
                  },
                  "instructions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A step-by-step list of instructions to prepare the recipe (optional)."
                    }
                  },
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Any alternative names or aliases for the recipe (optional)."
                    }
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Categories the recipe belongs to (optional)."
                    }
                  },
                  "subcategories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Subcategories the recipe belongs to (optional)."
                    }
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "URL of the image (optional)."
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the image (e.g., thumbnail, full-size) (optional)."
                        },
                        "caption": {
                          "type": "string",
                          "description": "A caption for the image (optional)."
                        }
                      }
                    }
                  },
                  "time": {
                    "type": "integer",
                    "description": "The preparation time in minutes (optional)."
                  },
                  "cost": {
                    "type": "integer",
                    "description": "The cost of the recipe (optional)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated recipe data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the recipe."
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the recipe."
                    },
                    "nation": {
                      "type": "string",
                      "description": "The nation the recipe is associated with."
                    },
                    "region": {
                      "type": "string",
                      "description": "The region the recipe is associated with."
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient."
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The quantity of the ingredient."
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the ingredient (e.g., grams, pieces)."
                          }
                        }
                      }
                    },
                    "instructions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Step-by-step instructions to prepare the recipe."
                      }
                    },
                    "time": {
                      "type": "integer",
                      "description": "The preparation time in minutes."
                    },
                    "cost": {
                      "type": "integer",
                      "description": "The cost of the recipe in your currency."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format or validation errors in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message explaining what went wrong."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the given ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while updating the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "The technical error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{name}": {
      "get": {
        "summary": "Fetch all recipes with a given name (including aliases).",
        "description": "This endpoint allows users to search for recipes by their name or alias. The query supports various filters \nsuch as category, subcategory, nation, region, preparation time, cost, sorting, and pagination. The search \nis case-insensitive and can handle partial name matches.\n",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name (or alias) of the recipe to search for.",
            "schema": {
              "type": "string",
              "example": "spaghetti"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter recipes by category.",
            "schema": {
              "type": "string",
              "example": "Italian"
            }
          },
          {
            "name": "subcategory",
            "in": "query",
            "description": "Filter recipes by subcategory.",
            "schema": {
              "type": "string",
              "example": "pasta"
            }
          },
          {
            "name": "nation",
            "in": "query",
            "description": "Filter recipes by nation of origin.",
            "schema": {
              "type": "string",
              "example": "Italy"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Filter recipes by region.",
            "schema": {
              "type": "string",
              "example": "Tuscany"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Filter recipes by preparation time in minutes.",
            "schema": {
              "type": "integer",
              "example": 30
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "Filter recipes by cost.",
            "schema": {
              "type": "integer",
              "example": 15
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort the results by a specific field.",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "time",
                "cost"
              ]
            },
            "example": "time"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page. Default is 10.",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for pagination. Default is 1.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of recipes matching the search criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "Total number of matching recipes.",
                      "example": 50
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the recipe."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the recipe."
                          },
                          "description": {
                            "type": "string",
                            "description": "A brief description of the recipe."
                          },
                          "nation": {
                            "type": "string",
                            "description": "The nation the recipe is associated with."
                          },
                          "region": {
                            "type": "string",
                            "description": "The region the recipe is associated with."
                          },
                          "time": {
                            "type": "integer",
                            "description": "The preparation time in minutes."
                          },
                          "cost": {
                            "type": "integer",
                            "description": "The cost of the recipe in your currency."
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Categories the recipe belongs to."
                            }
                          },
                          "subcategories": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Subcategories the recipe belongs to."
                            }
                          },
                          "ingredients": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A list of ingredients required for the recipe."
                            }
                          },
                          "instructions": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Step-by-step instructions for preparing the recipe."
                            }
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the image."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of image (e.g., thumbnail, full-size)."
                                },
                                "caption": {
                                  "type": "string",
                                  "description": "A caption describing the image."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of validation error messages for the query parameters."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "The error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "The technical error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/names": {
      "get": {
        "summary": "Fetch all available names (including aliases) for a recipe by ID.",
        "description": "This endpoint allows users to retrieve the primary name of a recipe along with any aliases (alternative names) \nthat are associated with that recipe. The recipe is identified by its unique ID.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe for which names are being fetched.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all names (including the primary name and aliases) associated with the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe.",
                      "example": 1
                    },
                    "names": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of names (the main name and any aliases) associated with the recipe.",
                      "example": [
                        "Spaghetti",
                        "Pasta al Pomodoro"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe with the provided ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the specified ID was not found."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error message."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching the recipe data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "post": {
        "summary": "Replace aliases for a specific recipe by its ID.",
        "description": "This endpoint allows users to replace the aliases (alternative names) associated with a recipe identified by its unique ID.\nThe old aliases will be removed, and new aliases will be added as specified in the request body.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe for which aliases are being replaced.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of new aliases to be associated with the recipe.",
                    "example": [
                      "Spaghetti alla Pomodoro",
                      "Tomato Spaghetti"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The recipe's aliases have been successfully replaced and the updated recipe is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe.",
                      "example": 1
                    },
                    "names": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of names (including the main name and any aliases) associated with the recipe.",
                      "example": [
                        "Spaghetti",
                        "Spaghetti alla Pomodoro",
                        "Tomato Spaghetti"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or invalid aliases format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe ID or aliases are invalid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe with the provided ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the specified ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while updating the aliases for the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "put": {
        "summary": "Add an additional alias for a specific recipe by its ID.",
        "description": "This endpoint allows users to add one or more new aliases (alternative names) to an existing recipe identified by its unique ID.\nThe new aliases will be added to the recipe's current list of aliases.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe to which the alias will be added.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "aliases": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of new aliases to be added to the recipe.",
                    "example": [
                      "Spaghetti Bolognese",
                      "Classic Spaghetti"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The recipe's aliases have been successfully updated, and the updated recipe is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe.",
                      "example": 1
                    },
                    "names": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of names (including the main name and any aliases) associated with the recipe.",
                      "example": [
                        "Spaghetti",
                        "Spaghetti Bolognese",
                        "Classic Spaghetti"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or invalid aliases format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe ID or aliases are invalid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe with the provided ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the specified ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while adding the alias for the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/ingredients": {
      "get": {
        "summary": "Fetch the ingredients for a specific recipe by its ID.",
        "description": "This endpoint allows users to retrieve a list of ingredients associated with a recipe identified by its unique ID.\nThe ingredients will include details such as name, quantity, and unit of measure.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe for which ingredients are being retrieved.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of ingredients for the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe.",
                      "example": 1
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the ingredient.",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient.",
                            "example": "Tomato"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "The quantity of the ingredient required for the recipe.",
                            "example": 2
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the ingredient (e.g., grams, cups, etc.).",
                            "example": "kg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe ID is invalid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe with the provided ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the specified ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipe ingredients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "post": {
        "summary": "Replace the ingredients for a specific recipe by its ID.",
        "description": "This endpoint allows users to replace all the ingredients for a recipe identified by its unique ID.\nThe new ingredients must be provided in the request body. Any existing ingredients will be deleted.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe for which ingredients are being replaced.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the ingredient.",
                          "example": "Tomato"
                        },
                        "quantity": {
                          "type": "number",
                          "description": "The quantity of the ingredient required for the recipe.",
                          "example": 2
                        },
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement for the ingredient (e.g., grams, cups, etc.).",
                          "example": "kg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully replaced the ingredients for the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe.",
                      "example": 1
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the ingredient.",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient.",
                            "example": "Tomato"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "The quantity of the ingredient required for the recipe.",
                            "example": 2
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the ingredient (e.g., \"kg\").",
                            "example": "kg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID format or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the error (e.g., \"Invalid recipe ID\" or \"Missing required fields\")."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe with the provided ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the specified ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while replacing ingredients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "put": {
        "summary": "Add a new ingredient to a specific recipe by its ID.",
        "description": "This endpoint allows users to add new ingredients to an existing recipe identified by its unique ID.\nThe new ingredients must be provided in the request body. It only adds ingredients, it will not replace existing ones.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe to which the ingredient is being added.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the ingredient.",
                          "example": "Tomato"
                        },
                        "quantity": {
                          "type": "number",
                          "description": "The quantity of the ingredient required for the recipe.",
                          "example": 2
                        },
                        "unit": {
                          "type": "string",
                          "description": "The unit of measurement for the ingredient (e.g., grams, cups, etc.).",
                          "example": "kg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added new ingredient(s) to the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe.",
                      "example": 1
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the ingredient.",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the ingredient.",
                            "example": "Tomato"
                          },
                          "quantity": {
                            "type": "number",
                            "description": "The quantity of the ingredient required for the recipe.",
                            "example": 2
                          },
                          "unit": {
                            "type": "string",
                            "description": "The unit of measurement for the ingredient (e.g., \"kg\").",
                            "example": "kg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID format or missing required fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the error (e.g., \"Invalid recipe ID\" or \"Missing required fields\")."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe with the provided ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe with the specified ID was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while adding ingredients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/ingredients/{ingredient_id}": {
      "delete": {
        "summary": "Remove an ingredient from a specific recipe by its ingredient ID.",
        "description": "This endpoint allows users to remove a specific ingredient from an existing recipe by its unique ingredient ID.\nThe ingredient will be removed from the recipe identified by the `id` parameter.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe from which the ingredient will be removed.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "ingredient_id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the ingredient to be removed from the recipe.",
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removed the ingredient from the recipe."
          },
          "400": {
            "description": "Invalid recipe ID or ingredient ID format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the error (e.g., \"Invalid recipe ID\" or \"Invalid ingredient ID\")."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified ingredient was not found in the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the ingredient was not found for the specified recipe."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while removing the ingredient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the server issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/instructions": {
      "get": {
        "summary": "Fetch the instructions for a specific recipe.",
        "description": "This endpoint fetches the instructions for a recipe identified by the `id` parameter.\nIt returns the steps and detailed instructions for preparing the recipe.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe whose instructions are to be fetched.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the recipe instructions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique ID of the recipe."
                    },
                    "instructions": {
                      "type": "array",
                      "description": "The list of instructions for preparing the recipe.",
                      "items": {
                        "type": "string",
                        "description": "The detailed instruction for the recipe step, the instructions are ordered by place in list.",
                        "example": "Preheat the oven to 350°F."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the invalid input."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The recipe with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching the recipe instructions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "put": {
        "summary": "Replace the instructions for a specific recipe.",
        "description": "This endpoint replaces the existing instructions of a recipe identified by the `id` parameter.\nThe new instructions provided in the request body will replace the existing instructions entirely.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe whose instructions are to be replaced.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instructions": {
                    "type": "array",
                    "description": "The list of new instructions for the recipe.",
                    "items": {
                      "type": "string",
                      "description": "The detailed instruction for the recipe step, the instructions are ordered by place in list.",
                      "example": "Preheat the oven to 350°F."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully replaced the recipe instructions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique ID of the recipe."
                    },
                    "instructions": {
                      "type": "array",
                      "description": "The updated list of instructions for preparing the recipe.",
                      "items": {
                        "type": "string",
                        "description": "The detailed instruction for the recipe step, the instructions are ordered by place in list.",
                        "example": "Preheat the oven to 350°F."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or invalid input data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating invalid input."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The recipe with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while replacing the recipe instructions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/categories": {
      "get": {
        "summary": "Fetch all categories for a specific recipe.",
        "description": "This endpoint fetches all the categories associated with a recipe identified by the `id` parameter.\nThe response will return the list of categories that the recipe belongs to.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe whose categories are to be fetched.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the categories for the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique ID of the recipe."
                    },
                    "categories": {
                      "type": "array",
                      "description": "The list of categories associated with the recipe.",
                      "items": {
                        "type": "string",
                        "description": "The name of the category.",
                        "example": "Dessert"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating invalid input."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The recipe with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching the recipe categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "put": {
        "summary": "Add new categories to a specific recipe.",
        "description": "This endpoint allows adding additional categories to a recipe identified by the `id` parameter.\nThe request body should include the list of categories to be added to the recipe.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe to which the categories will be added.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "categories": {
                    "type": "array",
                    "description": "List of categories to be added to the recipe.",
                    "items": {
                      "type": "string",
                      "description": "The name of the category to be added.",
                      "example": "Vegetarian"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully added the new categories to the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique ID of the recipe."
                    },
                    "categories": {
                      "type": "array",
                      "description": "The updated list of categories for the recipe.",
                      "items": {
                        "type": "string",
                        "description": "The name of the category.",
                        "example": "Vegetarian"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or invalid input data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating what was wrong with the request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The recipe with the specified ID was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the recipe was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while adding categories to the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/categories/{category_id}": {
      "delete": {
        "summary": "Remove a category from a specific recipe.",
        "description": "This endpoint allows removing a category from a recipe identified by the `id` parameter and the `category_id` path parameter.\nThe request deletes the relationship between the recipe and the category.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the recipe from which the category will be removed.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the category to be removed from the recipe.",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removed the category from the recipe."
          },
          "400": {
            "description": "Invalid recipe ID or category ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating what was wrong with the request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified recipe or category was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating that the category or recipe was not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while removing the category from the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message describing the issue."
                    },
                    "error": {
                      "type": "string",
                      "description": "Detailed error information."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/subcategories": {
      "get": {
        "summary": "Fetch all subcategories for a specific recipe.",
        "description": "Fetch all the subcategories associated with a recipe based on its ID. This endpoint does not require any query parameters. \nIt will return a list of subcategories for the given recipe.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the recipe.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of subcategories for the specified recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe."
                    },
                    "subcategories": {
                      "type": "array",
                      "description": "List of subcategories associated with the recipe.",
                      "items": {
                        "type": "string",
                        "description": "The name of the subcategory."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID provided in the path.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching the recipe subcategories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "put": {
        "summary": "Add more subcategories to a specific recipe.",
        "description": "Add new subcategories to an existing recipe by its ID. This endpoint accepts an array of subcategory IDs in the request body.\nThe subcategories are added to the recipe in a transactional manner to ensure data consistency.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the recipe to which subcategories should be added.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subcategories": {
                    "type": "array",
                    "description": "List of subcategories to be added to the recipe.",
                    "items": {
                      "type": "string",
                      "description": "The name of a subcategory to be added."
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The recipe with the newly added subcategories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe."
                    },
                    "subcategories": {
                      "type": "array",
                      "description": "List of subcategories now associated with the recipe.",
                      "items": {
                        "type": "string",
                        "description": "The name of the subcategory."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or invalid request body (e.g., missing or incorrect subcategory IDs).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while adding subcategories to the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/subcategories/{subcategory_id}": {
      "delete": {
        "summary": "Remove a subcategory from a specific recipe.",
        "description": "Remove a specific subcategory from a recipe by its `recipeId` and `subcategoryId`. This endpoint ensures that the subcategory is associated with the recipe before it can be removed. The operation is performed within a transaction to maintain data integrity.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the recipe from which the subcategory will be removed.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subcategory_id",
            "in": "path",
            "description": "The unique identifier of the subcategory to be removed from the recipe.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully removed the subcategory from the recipe."
          },
          "400": {
            "description": "Invalid recipe ID or subcategory ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The subcategory was not found for the provided recipe ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while removing the subcategory from the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/images": {
      "get": {
        "summary": "Fetch all images associated with a recipe.",
        "description": "Fetch a list of all available images for a specific recipe identified by its `recipeId`. You can filter the images using pagination parameters `limit` and `page`. The `limit` defines the number of images per page (default is 10), and `page` defines the page number (default is 1).\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the recipe for which images are being fetched.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of images to fetch per page. Defaults to 10, max is 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to retrieve images for. Defaults to 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of images associated with the specified recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "Total number of images associated with the recipe."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier for the image."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the image."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type or category of the image (e.g., thumbnail, full-size)."
                          },
                          "caption": {
                            "type": "string",
                            "description": "A short caption or description for the image."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No images found for the specified recipe ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching recipe images.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      },
      "post": {
        "summary": "Add a new image for a recipe.",
        "description": "Add one or more images to a specific recipe identified by its `recipeId`. The request body should contain image data, which could include the image URL, type (e.g., thumbnail, full-size), and an optional caption.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the recipe to which the image(s) will be added.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "The URL of the image."
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of image (e.g., \"thumbnail\", \"full-size\")."
                        },
                        "caption": {
                          "type": "string",
                          "description": "A short caption for the image (optional)."
                        }
                      }
                    },
                    "description": "An array of images to add to the recipe."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated recipe with the newly added image(s).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the recipe."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the recipe."
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the image."
                          },
                          "url": {
                            "type": "string",
                            "description": "The URL of the image."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of image (e.g., \"thumbnail\", \"full-size\")."
                          },
                          "caption": {
                            "type": "string",
                            "description": "A short caption describing the image."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid recipe ID or invalid image data in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while adding the image to the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/recipes/{id}/images/{image_id}": {
      "delete": {
        "summary": "Remove an image from a recipe by image ID.",
        "description": "Removes a specific image from a recipe identified by its `recipeId` and `imageId`. The image will be deleted from the recipe and the associated cache will be invalidated.\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the recipe from which the image will be removed.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "image_id",
            "in": "path",
            "description": "The unique identifier of the image to be removed from the recipe.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The image was successfully deleted from the recipe."
          },
          "400": {
            "description": "Invalid recipe ID or image ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified image was not found for the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while removing the image from the recipe.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Recipes"
        ]
      }
    },
    "/chop/api/regions": {
      "get": {
        "summary": "Fetch all available regions.",
        "description": "Fetch a list of all regions. You can filter, sort, and paginate the results using query parameters.\n",
        "parameters": [
          {
            "name": "nation",
            "in": "query",
            "description": "Filter regions by nation.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specify the field to sort by (e.g., \"name\"). Defaults to sorting by region name.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "code"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of regions to fetch per page. Defaults to 10, max is 100.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of results to retrieve. Defaults to 1.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for regions by name or other criteria.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of regions, with optional pagination and sorting.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "The total number of regions found."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the region."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "code": {
                            "type": "string",
                            "description": "The unique code for the region."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching regions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Regions"
        ]
      }
    },
    "/chop/api/regions/{region_id}": {
      "get": {
        "summary": "Fetch region by region ID.",
        "description": "Fetch the details of a specific region by its unique ID.\nIf the provided ID is invalid or the region does not exist, an error message will be returned.\n",
        "parameters": [
          {
            "name": "region_id",
            "in": "path",
            "description": "The unique ID of the region.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Region details for the specified region ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the region."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the region."
                    },
                    "code": {
                      "type": "string",
                      "description": "The unique code of the region."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid region ID format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Region not found for the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Region with id: {regionId} not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching region details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Regions"
        ]
      }
    },
    "/chop/api/regions/{region_name}": {
      "get": {
        "summary": "Fetch region by region name.",
        "description": "Fetch the details of a specific region by its name. The name is case-insensitive and can be partially matched.\nIf no region is found with the provided name, an error message will be returned.\n",
        "parameters": [
          {
            "name": "region_name",
            "in": "path",
            "description": "The name of the region to search for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Region details for the specified region name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the region."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the region."
                    },
                    "code": {
                      "type": "string",
                      "description": "The unique code of the region."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Region not found with the given name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Region with name: {region_name} not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching region details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Regions"
        ]
      }
    },
    "/chop/api/regions/{region_id}/nations": {
      "get": {
        "summary": "Fetch nations of a specific region by region id.",
        "description": "Fetch a list of nations associated with a specific region using the region’s unique ID. \nIf no region is found with the provided ID, an error message will be returned.\n",
        "parameters": [
          {
            "name": "region_id",
            "in": "path",
            "description": "The unique ID of the region to fetch nations for.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of nations for the specified region ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the region."
                    },
                    "nations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of nation names associated with the region."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid region ID format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Region not found with the given ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Region with id: {region_id} not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching the nations of the region.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Regions"
        ]
      }
    },
    "/chop/api/regions/{region_name}/nations": {
      "get": {
        "summary": "Fetch nations of a specific region by region name.",
        "description": "Fetch a list of nations associated with a specific region using the region’s name. \nThe response can be filtered and paginated with query parameters for sorting, limit, and page. \nIf no region is found with the provided name, an error message will be returned.\n",
        "parameters": [
          {
            "name": "region_name",
            "in": "path",
            "description": "The name of the region to fetch nations for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort by.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for paginated results.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of nations for the specified region name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the region."
                    },
                    "nations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of nation names associated with the region."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters (e.g., invalid limit, page, or sort).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Region not found with the given name.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Region with name: {region_name} not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching the nations of the region.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Regions"
        ]
      }
    },
    "/chop/api/subcategories": {
      "get": {
        "summary": "Fetch all available subcategories.",
        "description": "Fetch a list of all available subcategories with the option to filter and paginate the results.\nThe response can be sorted and filtered by search term. If no subcategories are found, an empty list will be returned.\n",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort subcategories by.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number for paginated results.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term to filter subcategories by name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "vegan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available subcategories, possibly filtered and paginated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalResults": {
                      "type": "integer",
                      "description": "The total number of subcategories available."
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique identifier of the subcategory."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the subcategory."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters (e.g., invalid limit, page, or sort).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching subcategories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Subcategories"
        ]
      }
    }
  },
  "components": {},
  "tags": []
}